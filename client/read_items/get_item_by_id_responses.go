// Code generated by go-swagger; DO NOT EDIT.

package read_items

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"go-server-server/lostfound/models"
)

// GetItemByIDReader is a Reader for the GetItemByID structure.
type GetItemByIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetItemByIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetItemByIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetItemByIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetItemByIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetItemByIDOK creates a GetItemByIDOK with default headers values
func NewGetItemByIDOK() *GetItemByIDOK {
	return &GetItemByIDOK{}
}

/* GetItemByIDOK describes a response with status code 200, with default header values.

Item get
*/
type GetItemByIDOK struct {
	Payload *models.Item
}

func (o *GetItemByIDOK) Error() string {
	return fmt.Sprintf("[GET /items/{itemId}][%d] getItemByIdOK  %+v", 200, o.Payload)
}
func (o *GetItemByIDOK) GetPayload() *models.Item {
	return o.Payload
}

func (o *GetItemByIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Item)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetItemByIDBadRequest creates a GetItemByIDBadRequest with default headers values
func NewGetItemByIDBadRequest() *GetItemByIDBadRequest {
	return &GetItemByIDBadRequest{}
}

/* GetItemByIDBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetItemByIDBadRequest struct {
}

func (o *GetItemByIDBadRequest) Error() string {
	return fmt.Sprintf("[GET /items/{itemId}][%d] getItemByIdBadRequest ", 400)
}

func (o *GetItemByIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetItemByIDNotFound creates a GetItemByIDNotFound with default headers values
func NewGetItemByIDNotFound() *GetItemByIDNotFound {
	return &GetItemByIDNotFound{}
}

/* GetItemByIDNotFound describes a response with status code 404, with default header values.

Item Not Found
*/
type GetItemByIDNotFound struct {
}

func (o *GetItemByIDNotFound) Error() string {
	return fmt.Sprintf("[GET /items/{itemId}][%d] getItemByIdNotFound ", 404)
}

func (o *GetItemByIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
